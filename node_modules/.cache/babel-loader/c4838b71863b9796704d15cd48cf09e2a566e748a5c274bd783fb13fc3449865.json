{"ast":null,"code":"var _jsxFileName = \"/Users/Ty/Desktop/supabase-auth-app/src/ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { supabase } from \"./supabaseClient\";\nimport { Auth } from \"@supabase/auth-ui-react\";\nimport { ThemeSupa } from \"@supabase/auth-ui-shared\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResetPassword() {\n  _s();\n  const [resetToken, setResetToken] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const hash = window.location.hash;\n    const params = new URLSearchParams(hash.slice(1));\n    const type = params.get(\"type\");\n    const token = params.get(\"access_token\");\n    if (type === \"recovery\" && token) {\n      setResetToken(token);\n      // Set the access token in the supabase client\n      supabase.auth.setSession({\n        access_token: token,\n        refresh_token: params.get(\"refresh_token\")\n      });\n    }\n  }, []);\n  const handlePasswordReset = async newPassword => {\n    try {\n      const {\n        error\n      } = await supabase.auth.updateUser({\n        password: newPassword\n      });\n      if (error) throw error;\n      alert(\"Password reset successfully!\");\n      navigate(\"/login\");\n    } catch (error) {\n      alert(\"Error resetting password: \" + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reset-password-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset Your Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Auth, {\n      supabaseClient: supabase,\n      appearance: {\n        theme: ThemeSupa\n      },\n      theme: \"dark\",\n      providers: [],\n      view: resetToken ? \"update_password\" : \"forgot_password\",\n      onPasswordUpdate: handlePasswordReset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPassword, \"XvGv7QtyRx2jE50gXjrDHM5IM7g=\", false, function () {\n  return [useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","supabase","Auth","ThemeSupa","jsxDEV","_jsxDEV","ResetPassword","_s","resetToken","setResetToken","navigate","hash","window","location","params","URLSearchParams","slice","type","get","token","auth","setSession","access_token","refresh_token","handlePasswordReset","newPassword","error","updateUser","password","alert","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","supabaseClient","appearance","theme","providers","view","onPasswordUpdate","_c","$RefreshReg$"],"sources":["/Users/Ty/Desktop/supabase-auth-app/src/ResetPassword.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { supabase } from \"./supabaseClient\";\nimport { Auth } from \"@supabase/auth-ui-react\";\nimport { ThemeSupa } from \"@supabase/auth-ui-shared\";\n\nfunction ResetPassword() {\n  const [resetToken, setResetToken] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const hash = window.location.hash;\n    const params = new URLSearchParams(hash.slice(1));\n    const type = params.get(\"type\");\n    const token = params.get(\"access_token\");\n\n    if (type === \"recovery\" && token) {\n      setResetToken(token);\n      // Set the access token in the supabase client\n      supabase.auth.setSession({\n        access_token: token,\n        refresh_token: params.get(\"refresh_token\"),\n      });\n    }\n  }, []);\n\n  const handlePasswordReset = async (newPassword) => {\n    try {\n      const { error } = await supabase.auth.updateUser({\n        password: newPassword,\n      });\n\n      if (error) throw error;\n\n      alert(\"Password reset successfully!\");\n      navigate(\"/login\");\n    } catch (error) {\n      alert(\"Error resetting password: \" + error.message);\n    }\n  };\n\n  return (\n    <div className=\"reset-password-container\">\n      <h2>Reset Your Password</h2>\n      <Auth\n        supabaseClient={supabase}\n        appearance={{ theme: ThemeSupa }}\n        theme=\"dark\"\n        providers={[]}\n        view={resetToken ? \"update_password\" : \"forgot_password\"}\n        onPasswordUpdate={handlePasswordReset}\n      />\n    </div>\n  );\n}\n\nexport default ResetPassword;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,IAAI,QAAQ,yBAAyB;AAC9C,SAASC,SAAS,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAMY,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,MAAMY,IAAI,GAAGC,MAAM,CAACC,QAAQ,CAACF,IAAI;IACjC,MAAMG,MAAM,GAAG,IAAIC,eAAe,CAACJ,IAAI,CAACK,KAAK,CAAC,CAAC,CAAC,CAAC;IACjD,MAAMC,IAAI,GAAGH,MAAM,CAACI,GAAG,CAAC,MAAM,CAAC;IAC/B,MAAMC,KAAK,GAAGL,MAAM,CAACI,GAAG,CAAC,cAAc,CAAC;IAExC,IAAID,IAAI,KAAK,UAAU,IAAIE,KAAK,EAAE;MAChCV,aAAa,CAACU,KAAK,CAAC;MACpB;MACAlB,QAAQ,CAACmB,IAAI,CAACC,UAAU,CAAC;QACvBC,YAAY,EAAEH,KAAK;QACnBI,aAAa,EAAET,MAAM,CAACI,GAAG,CAAC,eAAe;MAC3C,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,mBAAmB,GAAG,MAAOC,WAAW,IAAK;IACjD,IAAI;MACF,MAAM;QAAEC;MAAM,CAAC,GAAG,MAAMzB,QAAQ,CAACmB,IAAI,CAACO,UAAU,CAAC;QAC/CC,QAAQ,EAAEH;MACZ,CAAC,CAAC;MAEF,IAAIC,KAAK,EAAE,MAAMA,KAAK;MAEtBG,KAAK,CAAC,8BAA8B,CAAC;MACrCnB,QAAQ,CAAC,QAAQ,CAAC;IACpB,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACdG,KAAK,CAAC,4BAA4B,GAAGH,KAAK,CAACI,OAAO,CAAC;IACrD;EACF,CAAC;EAED,oBACEzB,OAAA;IAAK0B,SAAS,EAAC,0BAA0B;IAAAC,QAAA,gBACvC3B,OAAA;MAAA2B,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5B/B,OAAA,CAACH,IAAI;MACHmC,cAAc,EAAEpC,QAAS;MACzBqC,UAAU,EAAE;QAAEC,KAAK,EAAEpC;MAAU,CAAE;MACjCoC,KAAK,EAAC,MAAM;MACZC,SAAS,EAAE,EAAG;MACdC,IAAI,EAAEjC,UAAU,GAAG,iBAAiB,GAAG,iBAAkB;MACzDkC,gBAAgB,EAAElB;IAAoB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC7B,EAAA,CAhDQD,aAAa;EAAA,QAEHN,WAAW;AAAA;AAAA2C,EAAA,GAFrBrC,aAAa;AAkDtB,eAAeA,aAAa;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
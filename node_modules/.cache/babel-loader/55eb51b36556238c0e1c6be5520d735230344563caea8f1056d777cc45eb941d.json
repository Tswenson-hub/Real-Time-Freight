{"ast":null,"code":"var _jsxFileName = \"/Users/Ty/Desktop/supabase-auth-app/src/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { supabase } from \"./supabaseClient\";\nimport { Auth } from \"@supabase/auth-ui-react\";\nimport { ThemeSupa } from \"@supabase/auth-ui-shared\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const navigate = useNavigate();\n  const [authView, setAuthView] = useState(\"sign_in\");\n  useEffect(() => {\n    const {\n      data: authListener\n    } = supabase.auth.onAuthStateChange((event, session) => {\n      if (event === \"SIGNED_IN\") {\n        navigate(\"/\");\n      } else if (event === \"SIGNED_OUT\") {\n        navigate(\"/login\");\n      }\n    });\n\n    // Check the initial auth state\n    supabase.auth.getSession().then(({\n      data: {\n        session\n      }\n    }) => {\n      if (session) {\n        navigate(\"/\");\n      }\n    });\n\n    // Cleanup function to remove the listener when the component unmounts\n    return () => {\n      if (authListener && authListener.subscription) {\n        authListener.subscription.unsubscribe();\n      }\n    };\n  }, [navigate]);\n  const toggleAuthView = () => {\n    setAuthView(authView === \"sign_in\" ? \"sign_up\" : \"sign_in\");\n  };\n  const handleSignUp = async (email, password) => {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.auth.signUp({\n        email: email,\n        password: password\n      });\n      if (error) throw error;\n      console.log(\"User signed up successfully:\", data);\n    } catch (error) {\n      console.error(\"Error signing up:\", error.message);\n      // Display this error message to the user\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: authView === \"sign_in\" ? \"Welcome Back\" : \"Create an Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Auth, {\n        supabaseClient: supabase,\n        appearance: {\n          theme: ThemeSupa\n        },\n        theme: \"dark\",\n        providers: [\"discord\"],\n        view: authView,\n        onSignUp: handleSignUp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"WgvGUMDnnEas5LFx3+00gI/XIh4=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","supabase","Auth","ThemeSupa","useNavigate","jsxDEV","_jsxDEV","Login","_s","navigate","authView","setAuthView","data","authListener","auth","onAuthStateChange","event","session","getSession","then","subscription","unsubscribe","toggleAuthView","handleSignUp","email","password","error","signUp","console","log","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","supabaseClient","appearance","theme","providers","view","onSignUp","_c","$RefreshReg$"],"sources":["/Users/Ty/Desktop/supabase-auth-app/src/Login.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { supabase } from \"./supabaseClient\";\nimport { Auth } from \"@supabase/auth-ui-react\";\nimport { ThemeSupa } from \"@supabase/auth-ui-shared\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Login.css\";\n\nfunction Login() {\n  const navigate = useNavigate();\n  const [authView, setAuthView] = useState(\"sign_in\");\n\n  useEffect(() => {\n    const { data: authListener } = supabase.auth.onAuthStateChange(\n      (event, session) => {\n        if (event === \"SIGNED_IN\") {\n          navigate(\"/\");\n        } else if (event === \"SIGNED_OUT\") {\n          navigate(\"/login\");\n        }\n      }\n    );\n\n    // Check the initial auth state\n    supabase.auth.getSession().then(({ data: { session } }) => {\n      if (session) {\n        navigate(\"/\");\n      }\n    });\n\n    // Cleanup function to remove the listener when the component unmounts\n    return () => {\n      if (authListener && authListener.subscription) {\n        authListener.subscription.unsubscribe();\n      }\n    };\n  }, [navigate]);\n\n  const toggleAuthView = () => {\n    setAuthView(authView === \"sign_in\" ? \"sign_up\" : \"sign_in\");\n  };\n\n  const handleSignUp = async (email, password) => {\n    try {\n      const { data, error } = await supabase.auth.signUp({\n        email: email,\n        password: password,\n      });\n      if (error) throw error;\n      console.log(\"User signed up successfully:\", data);\n    } catch (error) {\n      console.error(\"Error signing up:\", error.message);\n      // Display this error message to the user\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <div className=\"login-box\">\n        <h1>{authView === \"sign_in\" ? \"Welcome Back\" : \"Create an Account\"}</h1>\n        <Auth\n          supabaseClient={supabase}\n          appearance={{ theme: ThemeSupa }}\n          theme=\"dark\"\n          providers={[\"discord\"]}\n          view={authView}\n          onSignUp={handleSignUp}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
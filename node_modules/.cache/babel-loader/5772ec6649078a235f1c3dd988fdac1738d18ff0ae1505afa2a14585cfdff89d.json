{"ast":null,"code":"var _jsxFileName = \"/Users/Ty/Desktop/supabase-auth-app/src/ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { supabase } from \"./supabaseClient\";\nimport { Auth } from \"@supabase/auth-ui-react\";\nimport { ThemeSupa } from \"@supabase/auth-ui-shared\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResetPassword() {\n  _s();\n  const [resetToken, setResetToken] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Extract the reset token from the URL\n    const hash = window.location.hash;\n    const params = new URLSearchParams(hash.slice(1)); // remove the # symbol\n    const type = params.get(\"type\");\n    const token = params.get(\"access_token\");\n    if (type === \"recovery\" && token) {\n      setResetToken(token);\n    }\n  }, []);\n  const handlePasswordReset = async newPassword => {\n    if (resetToken) {\n      const {\n        error\n      } = await supabase.auth.updateUser({\n        password: newPassword\n      });\n      if (error) {\n        alert(\"Error resetting password: \" + error.message);\n      } else {\n        alert(\"Password reset successfully!\");\n        navigate(\"/login\");\n      }\n    }\n  };\n  if (resetToken) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reset-password-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Reset Your Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Auth, {\n        supabaseClient: supabase,\n        appearance: {\n          theme: ThemeSupa\n        },\n        theme: \"dark\",\n        providers: [],\n        view: \"update_password\",\n        onPasswordUpdate: handlePasswordReset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reset-password-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset Your Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Auth, {\n      supabaseClient: supabase,\n      appearance: {\n        theme: ThemeSupa\n      },\n      theme: \"dark\",\n      providers: [],\n      view: \"forgot_password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPassword, \"XvGv7QtyRx2jE50gXjrDHM5IM7g=\", false, function () {\n  return [useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","supabase","Auth","ThemeSupa","jsxDEV","_jsxDEV","ResetPassword","_s","resetToken","setResetToken","navigate","hash","window","location","params","URLSearchParams","slice","type","get","token","handlePasswordReset","newPassword","error","auth","updateUser","password","alert","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","supabaseClient","appearance","theme","providers","view","onPasswordUpdate","_c","$RefreshReg$"],"sources":["/Users/Ty/Desktop/supabase-auth-app/src/ResetPassword.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { supabase } from \"./supabaseClient\";\nimport { Auth } from \"@supabase/auth-ui-react\";\nimport { ThemeSupa } from \"@supabase/auth-ui-shared\";\n\nfunction ResetPassword() {\n  const [resetToken, setResetToken] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Extract the reset token from the URL\n    const hash = window.location.hash;\n    const params = new URLSearchParams(hash.slice(1)); // remove the # symbol\n    const type = params.get(\"type\");\n    const token = params.get(\"access_token\");\n\n    if (type === \"recovery\" && token) {\n      setResetToken(token);\n    }\n  }, []);\n\n  const handlePasswordReset = async (newPassword) => {\n    if (resetToken) {\n      const { error } = await supabase.auth.updateUser({\n        password: newPassword,\n      });\n\n      if (error) {\n        alert(\"Error resetting password: \" + error.message);\n      } else {\n        alert(\"Password reset successfully!\");\n        navigate(\"/login\");\n      }\n    }\n  };\n\n  if (resetToken) {\n    return (\n      <div className=\"reset-password-container\">\n        <h2>Reset Your Password</h2>\n        <Auth\n          supabaseClient={supabase}\n          appearance={{ theme: ThemeSupa }}\n          theme=\"dark\"\n          providers={[]}\n          view=\"update_password\"\n          onPasswordUpdate={handlePasswordReset}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"reset-password-container\">\n      <h2>Reset Your Password</h2>\n      <Auth\n        supabaseClient={supabase}\n        appearance={{ theme: ThemeSupa }}\n        theme=\"dark\"\n        providers={[]}\n        view=\"forgot_password\"\n      />\n    </div>\n  );\n}\n\nexport default ResetPassword;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,IAAI,QAAQ,yBAAyB;AAC9C,SAASC,SAAS,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAMY,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd;IACA,MAAMY,IAAI,GAAGC,MAAM,CAACC,QAAQ,CAACF,IAAI;IACjC,MAAMG,MAAM,GAAG,IAAIC,eAAe,CAACJ,IAAI,CAACK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnD,MAAMC,IAAI,GAAGH,MAAM,CAACI,GAAG,CAAC,MAAM,CAAC;IAC/B,MAAMC,KAAK,GAAGL,MAAM,CAACI,GAAG,CAAC,cAAc,CAAC;IAExC,IAAID,IAAI,KAAK,UAAU,IAAIE,KAAK,EAAE;MAChCV,aAAa,CAACU,KAAK,CAAC;IACtB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,mBAAmB,GAAG,MAAOC,WAAW,IAAK;IACjD,IAAIb,UAAU,EAAE;MACd,MAAM;QAAEc;MAAM,CAAC,GAAG,MAAMrB,QAAQ,CAACsB,IAAI,CAACC,UAAU,CAAC;QAC/CC,QAAQ,EAAEJ;MACZ,CAAC,CAAC;MAEF,IAAIC,KAAK,EAAE;QACTI,KAAK,CAAC,4BAA4B,GAAGJ,KAAK,CAACK,OAAO,CAAC;MACrD,CAAC,MAAM;QACLD,KAAK,CAAC,8BAA8B,CAAC;QACrChB,QAAQ,CAAC,QAAQ,CAAC;MACpB;IACF;EACF,CAAC;EAED,IAAIF,UAAU,EAAE;IACd,oBACEH,OAAA;MAAKuB,SAAS,EAAC,0BAA0B;MAAAC,QAAA,gBACvCxB,OAAA;QAAAwB,QAAA,EAAI;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5B5B,OAAA,CAACH,IAAI;QACHgC,cAAc,EAAEjC,QAAS;QACzBkC,UAAU,EAAE;UAAEC,KAAK,EAAEjC;QAAU,CAAE;QACjCiC,KAAK,EAAC,MAAM;QACZC,SAAS,EAAE,EAAG;QACdC,IAAI,EAAC,iBAAiB;QACtBC,gBAAgB,EAAEnB;MAAoB;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV;EAEA,oBACE5B,OAAA;IAAKuB,SAAS,EAAC,0BAA0B;IAAAC,QAAA,gBACvCxB,OAAA;MAAAwB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5B5B,OAAA,CAACH,IAAI;MACHgC,cAAc,EAAEjC,QAAS;MACzBkC,UAAU,EAAE;QAAEC,KAAK,EAAEjC;MAAU,CAAE;MACjCiC,KAAK,EAAC,MAAM;MACZC,SAAS,EAAE,EAAG;MACdC,IAAI,EAAC;IAAiB;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC1B,EAAA,CA3DQD,aAAa;EAAA,QAEHN,WAAW;AAAA;AAAAwC,EAAA,GAFrBlC,aAAa;AA6DtB,eAAeA,aAAa;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
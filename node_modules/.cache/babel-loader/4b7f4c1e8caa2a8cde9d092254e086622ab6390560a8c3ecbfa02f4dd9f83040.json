{"ast":null,"code":"var _jsxFileName = \"/Users/Ty/Desktop/supabase-auth-app/src/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { supabase } from \"./supabaseClient\";\nimport { Auth } from \"@supabase/auth-ui-react\";\nimport { ThemeSupa } from \"@supabase/auth-ui-shared\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const {\n      data: authListener\n    } = supabase.auth.onAuthStateChange((event, session) => {\n      if (event === \"SIGNED_IN\") {\n        navigate(\"/\");\n      } else if (event === \"SIGNED_OUT\") {\n        navigate(\"/login\");\n      }\n    });\n\n    // Check the initial auth state\n    supabase.auth.getSession().then(({\n      data: {\n        session\n      }\n    }) => {\n      if (session) {\n        navigate(\"/\");\n      }\n    });\n\n    // Cleanup function to remove the listener when the component unmounts\n    return () => {\n      if (authListener && authListener.subscription) {\n        authListener.subscription.unsubscribe();\n      }\n    };\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Auth, {\n        supabaseClient: supabase,\n        appearance: {\n          theme: ThemeSupa\n        },\n        theme: \"dark\",\n        providers: [\"discord\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","supabase","Auth","ThemeSupa","useNavigate","jsxDEV","_jsxDEV","Login","_s","navigate","data","authListener","auth","onAuthStateChange","event","session","getSession","then","subscription","unsubscribe","className","children","fileName","_jsxFileName","lineNumber","columnNumber","supabaseClient","appearance","theme","providers","_c","$RefreshReg$"],"sources":["/Users/Ty/Desktop/supabase-auth-app/src/Login.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { supabase } from \"./supabaseClient\";\nimport { Auth } from \"@supabase/auth-ui-react\";\nimport { ThemeSupa } from \"@supabase/auth-ui-shared\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Login.css\";\n\nfunction Login() {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const { data: authListener } = supabase.auth.onAuthStateChange(\n      (event, session) => {\n        if (event === \"SIGNED_IN\") {\n          navigate(\"/\");\n        } else if (event === \"SIGNED_OUT\") {\n          navigate(\"/login\");\n        }\n      }\n    );\n\n    // Check the initial auth state\n    supabase.auth.getSession().then(({ data: { session } }) => {\n      if (session) {\n        navigate(\"/\");\n      }\n    });\n\n    // Cleanup function to remove the listener when the component unmounts\n    return () => {\n      if (authListener && authListener.subscription) {\n        authListener.subscription.unsubscribe();\n      }\n    };\n  }, [navigate]);\n\n  return (\n    <div className=\"login-container\">\n      <div className=\"login-box\">\n        <h1>Welcome Back</h1>\n        <Auth\n          supabaseClient={supabase}\n          appearance={{ theme: ThemeSupa }}\n          theme=\"dark\"\n          providers={[\"discord\"]}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,IAAI,QAAQ,yBAAyB;AAC9C,SAASC,SAAS,QAAQ,0BAA0B;AACpD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAE9BJ,SAAS,CAAC,MAAM;IACd,MAAM;MAAEU,IAAI,EAAEC;IAAa,CAAC,GAAGV,QAAQ,CAACW,IAAI,CAACC,iBAAiB,CAC5D,CAACC,KAAK,EAAEC,OAAO,KAAK;MAClB,IAAID,KAAK,KAAK,WAAW,EAAE;QACzBL,QAAQ,CAAC,GAAG,CAAC;MACf,CAAC,MAAM,IAAIK,KAAK,KAAK,YAAY,EAAE;QACjCL,QAAQ,CAAC,QAAQ,CAAC;MACpB;IACF,CACF,CAAC;;IAED;IACAR,QAAQ,CAACW,IAAI,CAACI,UAAU,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;MAAEP,IAAI,EAAE;QAAEK;MAAQ;IAAE,CAAC,KAAK;MACzD,IAAIA,OAAO,EAAE;QACXN,QAAQ,CAAC,GAAG,CAAC;MACf;IACF,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACX,IAAIE,YAAY,IAAIA,YAAY,CAACO,YAAY,EAAE;QAC7CP,YAAY,CAACO,YAAY,CAACC,WAAW,CAAC,CAAC;MACzC;IACF,CAAC;EACH,CAAC,EAAE,CAACV,QAAQ,CAAC,CAAC;EAEd,oBACEH,OAAA;IAAKc,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC9Bf,OAAA;MAAKc,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBf,OAAA;QAAAe,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrBnB,OAAA,CAACJ,IAAI;QACHwB,cAAc,EAAEzB,QAAS;QACzB0B,UAAU,EAAE;UAAEC,KAAK,EAAEzB;QAAU,CAAE;QACjCyB,KAAK,EAAC,MAAM;QACZC,SAAS,EAAE,CAAC,SAAS;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACjB,EAAA,CA1CQD,KAAK;EAAA,QACKH,WAAW;AAAA;AAAA0B,EAAA,GADrBvB,KAAK;AA4Cd,eAAeA,KAAK;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}